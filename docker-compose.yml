version: "3.8"

services:
  # Infra services
  cassandra-node-0:
    image: cassandra
    environment:
      - CASSANDRA_SEEDS=${CASSANDRA_SEEDS}
      - CASSANDRA_CLUSTER_NAME=${CASSANDRA_CLUSTER_NAME}
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=${CASSANDRA_DC}
      - HEAP_NEWSIZE=${HEAP_NEWSIZE}
      - MAX_HEAP_SIZE=${MAX_HEAP_SIZE}
    ports:
      - "${CASSANDRA_NODE0_PORT1}:7000" # 노드간 클러스터 내부 통신
      - "${CASSANDRA_NODE0_PORT2}:7001" # 노드간 보안 통신에 사용
      - "${CASSANDRA_NODE0_PORT3}:9042" # CQL 클라이언트와 통신
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 50

  cassandra-node-1:
    image: cassandra
    environment:
      - CASSANDRA_SEEDS=${CASSANDRA_SEEDS}
      - CASSANDRA_CLUSTER_NAME=${CASSANDRA_CLUSTER_NAME}
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=${CASSANDRA_DC}
      - HEAP_NEWSIZE=${HEAP_NEWSIZE}
      - MAX_HEAP_SIZE=${MAX_HEAP_SIZE}
    ports:
      - "${CASSANDRA_NODE1_PORT1}:7000"
      - "${CASSANDRA_NODE1_PORT2}:7001"
      - "${CASSANDRA_NODE1_PORT3}:9042"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 50

  cassandra-node-2:
    image: cassandra
    environment:
      - CASSANDRA_SEEDS=${CASSANDRA_SEEDS}
      - CASSANDRA_CLUSTER_NAME=${CASSANDRA_CLUSTER_NAME}
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=${CASSANDRA_DC}
      - HEAP_NEWSIZE=${HEAP_NEWSIZE}
      - MAX_HEAP_SIZE=${MAX_HEAP_SIZE}
    ports:
      - "${CASSANDRA_NODE2_PORT1}:7000"
      - "${CASSANDRA_NODE2_PORT2}:7001"
      - "${CASSANDRA_NODE2_PORT3}:9042"
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 50

  myredis:
    image: redis
    hostname: myredis
    ports:
      - "${REDIS_PORT}:6379"
    depends_on:
      cassandra-node-0:
        condition: service_healthy
      cassandra-node-1:
        condition: service_healthy
      cassandra-node-2:
        condition: service_healthy

  mysql-server:
    image: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      - myredis

  member-service:
    build:
      context: ./MemberService
      dockerfile: Dockerfile
    image: member-service
    ports:
      - "${MEMBER_SERVICE_PORT}:8080"
    environment:
    - DB_URL=${DB_URL}
    - DB_USERNAME=${DB_USERNAME}
    - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      mysql-server:
        condition: service_healthy

  payment-service:
    build:
      context: ./PaymentService
      dockerfile: Dockerfile
    image: payment-service
    ports:
      - "${PAYMENT_SERVICE_PORT}:8080"
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      mysql-server:
        condition: service_healthy

  delivery-service:
    build:
      context: ./DeliveryService
      dockerfile: Dockerfile
    image: delivery-service
    ports:
      - "${DELIVERY_SERVICE_PORT}:8080"
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      mysql-server:
        condition: service_healthy

  search-service:
    build:
      context: ./SearchService
      dockerfile: Dockerfile
    image: search-service
    ports:
      - "${SEARCH_SERVICE_PORT}:8080"
    depends_on:
      mysql-server:
        condition: service_healthy

  catalog-service:
    build:
      context: ./CatalogService
      dockerfile: Dockerfile
    image: catalog-service
    ports:
      - "${CATALOG_SERVICE_PORT}:8080"
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - CASSANDRA_CONTACT_POINTS=${CASSANDRA_CONTACT_POINTS}
      - CASSANDRA_PORT=${CASSANDRA_PORT}
      - CASSANDRA_LOCAL_DATACENTER=${CASSANDRA_LOCAL_DATACENTER}
    depends_on:
      mysql-server:
        condition: service_healthy
      cassandra-node-0:
        condition: service_healthy

  order-service:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    image: order-service
    ports:
      - "${ORDER_SERVICE_PORT}:8080"
    environment:
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      mysql-server:
        condition: service_healthy